{"version":3,"sources":["Socket.js","components/socket/Camara.js","utilities.js","components/socket/Canva.js","components/ui/Navbar.js","components/ui/Sidebar.js","components/layouts/layout.js","pages/Client.js","pages/Servidor.js","App.js","themes/dark-theme.js","themes/light-theme.js","index.js"],"names":["socket","io","Camara","useState","data","setData","Socket","on","image","className","src","alt","drawRect","detections","ctx","forEach","prediction","index","x","y","width","height","text","color","Math","floor","random","toString","strokeStyle","font","beginPath","fillStyle","fillText","rect","stroke","Canva","imgstate","setImgstate","webcamRef","useRef","canvasRef","runCoco","a","cocossd","net","console","log","setInterval","detect","current","video","readyState","videoWidth","videoHeight","obj","getContext","imgdata","getScreenshot","emit","useEffect","ref","muted","style","position","marginLeft","marginRight","left","right","textAlign","zindex","Navbar","AppBar","Toolbar","IconButton","size","edge","Link","underline","Typography","variant","menuItems","Sidebar","Drawer","anchor","Box","sx","padding","List","map","ListItem","button","key","ListItemIcon","ListItemText","primary","Divider","Layout","title","children","flexFlow","Client","Servidor","App","path","element","createTheme","palette","mode","secondary","main","error","red","A400","components","MuiAppBar","defaultProps","elevation","styleOverrides","root","backgroundColor","lightTheme","background","default","grey","ReactDOM","render","StrictMode","ThemeProvider","theme","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.fc1ab194.chunk.js","sourcesContent":["import io from \"socket.io-client\";\n\nlet socket = io(\"https://servidor-socket-sena.herokuapp.com/\");\n\nexport default socket;","import React, { useState } from 'react'\nimport Socket from '../../Socket'\n\n\nexport const Camara = () => {\n    const [data, setData] = useState(null)\n    Socket.on('stream', (image) => {\n\n        setData(image)\n    })\n    return (\n        <div className=\"App\">\n            <div><h1>Client</h1></div>\n            {(data === null) ? <div > No hay servervidor socket</div > : < img src={data} alt=\"\" />}\n        </div >\n    )\n}\n","export const drawRect = (detections, ctx) => {\n  // Loop through each prediction\n  detections.forEach((prediction, index) => {\n\n    // Extract boxes and classes\n    const [x, y, width, height] = prediction['bbox'];\n    const text = prediction['class'];\n\n    // Set styling\n    const color = Math.floor(Math.random() * 16777215).toString(16);\n    ctx.strokeStyle = '#' + color\n    ctx.font = '18px Arial';\n\n    // Draw rectangles and text\n    ctx.beginPath();\n    ctx.fillStyle = '#' + color\n    ctx.fillText(`${text}-${index + 1}`, x, y);\n    ctx.rect(x, y, width, height);\n    ctx.stroke();\n  });\n}\n","// Import dependencies\nimport React, { useRef, useState, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\nimport Webcam from \"react-webcam\";\nimport \"../../App.css\";\nimport { drawRect } from \"../../utilities\";\nimport Socket from \"../../Socket\";\n\n\nexport const Canva = () => {\n    const [imgstate, setImgstate] = useState(\"\")\n    const webcamRef = useRef(null);\n    const canvasRef = useRef(null);\n\n\n\n\n\n    // Main function\n    const runCoco = async () => {\n        const net = await cocossd.load();\n        console.log(\"Handpose model loaded.\");\n\n        //  Loop and detect hands\n        setInterval(() => {\n            detect(net);\n        }, 500);\n    };\n\n    const detect = async (net) => {\n        // Check data is available\n        if (\n            typeof webcamRef.current !== \"undefined\" &&\n            webcamRef.current !== null &&\n            webcamRef.current.video.readyState === 4\n        ) {\n            // Get Video Properties\n            const video = webcamRef.current.video;\n\n            const videoWidth = webcamRef.current.video.videoWidth;\n            const videoHeight = webcamRef.current.video.videoHeight;\n\n            // Set video width\n            webcamRef.current.video.width = videoWidth;\n            webcamRef.current.video.height = videoHeight;\n\n            // Set canvas height and width\n            canvasRef.current.width = videoWidth;\n            canvasRef.current.height = videoHeight;\n\n            // Make Detections\n            const obj = await net.detect(video);\n\n            // Draw mesh\n            const ctx = canvasRef.current.getContext(\"2d\");\n            drawRect(obj, ctx);\n            const imgdata = webcamRef.current.getScreenshot()\n            Socket.emit('stream', imgdata)\n            setImgstate(imgdata)\n\n            console.log(imgstate)\n        }\n    };\n\n    useEffect(() => { runCoco() }, []);\n\n    return (\n        <div className=\"App\">\n            <div><h1>servidor</h1></div>\n            <Webcam\n\n                ref={webcamRef}\n                muted={true}\n                style={{\n                    position: \"absolute\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    left: 0,\n                    right: 0,\n                    textAlign: \"center\",\n                    zindex: 9,\n                    width: 640,\n                    height: 480,\n                }}\n            />\n\n            <canvas\n\n                ref={canvasRef}\n                style={{\n                    position: \"absolute\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    left: 0,\n                    right: 0,\n                    textAlign: \"center\",\n                    zindex: 8,\n                    width: 640,\n                    height: 480,\n                }}\n            />\n\n        </div>\n    );\n}\n\n\n","\n// import { useContext } from 'react';\nimport { AppBar, IconButton, Link, Toolbar, Typography } from '@mui/material';\nimport MenuOutlinedIcon from '@mui/icons-material/MenuOutlined';\nimport React from 'react';\n// import { UIContext } from '../../context/ui';\n\nexport const Navbar = () => {\n\n    // const { openSideMenu } = useContext(UIContext);\n\n\n    return (\n        <AppBar position='sticky'>\n            <Toolbar>\n                <IconButton\n                    size='large'\n                    edge=\"start\"\n                // onClick={ openSideMenu }\n                >\n                    <MenuOutlinedIcon />\n                </IconButton>\n\n\n                <Link underline='none' color=\"white\">\n                    <Typography variant='h6'>Sena IA Socket</Typography>\n                </Link>\n            </Toolbar>\n        </AppBar>\n    )\n};","// import { useContext } from 'react';\nimport { Box, Divider, Drawer, List, ListItem, ListItemIcon, ListItemText, Typography } from '@mui/material';\nimport React from 'react';\nimport InboxOutlinedIcon from '@mui/icons-material/InboxOutlined';\nimport MailOutlineOutlinedIcon from '@mui/icons-material/MailOutlineOutlined';\n// import { UIContext } from '../../context/ui';\n\nconst menuItems = ['Inbox', 'Starred', 'Send Email', 'Drafts']\n\n\nexport const Sidebar = () => {\n\n    // const { sidemenuOpen, closeSideMenu } = useContext(UIContext);\n\n\n    return (\n        <Drawer\n            anchor=\"left\"\n            // open={sidemenuOpen}\n            // onClose={closeSideMenu}\n        >\n            <Box sx={{ width: 250 }}>\n\n                <Box sx={{ padding: '5px 10px' }}>\n                    <Typography variant=\"h4\">Menú</Typography>\n                </Box>\n\n                <List>\n                    {\n                        menuItems.map((text, index) => (\n                            <ListItem button key={text}>\n                                <ListItemIcon>\n                                    {index % 2 ? <InboxOutlinedIcon /> : <MailOutlineOutlinedIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={text} />\n                            </ListItem>\n                        ))\n                    }\n                </List>\n\n                <Divider />\n\n                <List>\n                    {\n                        menuItems.map((text, index) => (\n                            <ListItem button key={text}>\n                                <ListItemIcon>\n                                    {index % 2 ? <InboxOutlinedIcon /> : <MailOutlineOutlinedIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={text} />\n                            </ListItem>\n                        ))\n                    }\n                </List>\n\n            </Box>\n\n        </Drawer>\n    )\n};","import React from 'react';\nimport { Box } from '@mui/material';\nimport { Navbar, Sidebar } from '../ui';\n\n\n\n\nexport const Layout = ({ title = 'servidor', children }) => {\n    return (\n        <Box sx={{ flexFlow: 1 }}>\n\n            <Navbar />\n            <Sidebar />\n\n            <Box sx={{ padding: '10px 20px' }}>\n                {children}\n            </Box>\n\n        </Box>\n    )\n};","import React from 'react'\nimport { Canva, Camara } from '../components'\nimport { Layout } from '../components/layouts/layout'\n\nexport const Client = () => {\n    return (\n        <Layout>\n            <Camara />\n        </Layout>\n    )\n}\n","import React from 'react'\nimport { Canva } from '../components'\nimport { Layout } from '../components/layouts/layout'\nexport const Servidor = () => {\n    return (\n        <Layout>\n            <Canva />\n        </Layout>\n    )\n}\n","import { Servidor, Client } from './pages'\nimport { Routes, Route } from \"react-router-dom\";\nimport React from 'react';\n\nconst App = () => {\n  return (\n\n    <Routes>\n      <Route path=\"/\" element={<Servidor />} />\n      <Route path=\"client\" element={<Client />} />\n    </Routes>\n  )\n}\n\nexport default App","import { createTheme } from '@mui/material';\nimport { red } from '@mui/material/colors';\n\n\n\nexport const darkTheme = createTheme({\n    palette: {\n        mode: 'dark',\n            secondary: {\n                main: '#19857b'\n            },\n            error: {\n                main: red.A400\n            },\n        },\n\n        components: {\n            MuiAppBar: {\n                defaultProps: {\n                    elevation: 0\n                },\n                styleOverrides: {\n                    root: {\n                        backgroundColor: '#4a148c'\n                    }\n                }\n            }\n        }\n});","import { createTheme } from '@mui/material';\nimport { grey, red } from '@mui/material/colors';\n\n\n\nexport const lightTheme = createTheme({\n    palette: {\n        mode: 'light',\n        background: {\n            default: grey[300]\n        },\n        primary: {\n            main: '#4a148c'\n        },\n        secondary: {\n            main: '#19857b'\n        },\n        error: {\n            main: red.A400\n        },\n    },\n\n    components: {\n        MuiAppBar: {\n            defaultProps: {\n                elevation: 0\n            },\n            styleOverrides: {}\n        }\n    }\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ThemeProvider, CssBaseline } from '@mui/material';\nimport { darkTheme } from './themes/dark-theme';\nimport { lightTheme } from './themes/light-theme';\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={lightTheme}>\n      <CssBaseline />\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}