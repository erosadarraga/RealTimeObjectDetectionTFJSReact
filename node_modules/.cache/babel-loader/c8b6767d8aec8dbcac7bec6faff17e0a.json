{"ast":null,"code":"var _jsxFileName = \"/home/eros/Escritorio/next IA/prueba final/client/src/components/socket/Canva.js\";\n// Import dependencies\nimport React, { useRef, useState, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\nimport Webcam from \"react-webcam\";\nimport \"../App.css\";\nimport { drawRect } from \"../../utilities\";\nimport Socket from \"../../Socket\";\nexport const Canva = () => {\n  const [imgstate, setImgstate] = useState(\"\");\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null); // Main function\n\n  const runCoco = async () => {\n    const net = await cocossd.load();\n    console.log(\"Handpose model loaded.\"); //  Loop and detect hands\n\n    setInterval(() => {\n      detect(net);\n    }, 500);\n  };\n\n  const detect = async net => {\n    // Check data is available\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight; // Set video width\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight; // Set canvas height and width\n\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight; // Make Detections\n\n      const obj = await net.detect(video); // Draw mesh\n\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawRect(obj, ctx);\n      const imgdata = webcamRef.current.getScreenshot();\n      Socket.emit('stream', imgdata);\n      setImgstate(imgdata);\n      console.log(imgstate);\n    }\n  };\n\n  useEffect(() => {\n    runCoco();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 18\n    }\n  }, \"Hola perras\")), /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Webcam, {\n    ref: webcamRef,\n    muted: true,\n    style: {\n      position: \"absolute\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      left: 0,\n      right: 0,\n      textAlign: \"center\",\n      zindex: 9,\n      width: 640,\n      height: 480\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      position: \"absolute\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      left: 0,\n      right: 0,\n      textAlign: \"center\",\n      zindex: 8,\n      width: 640,\n      height: 480\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  })));\n};","map":{"version":3,"sources":["/home/eros/Escritorio/next IA/prueba final/client/src/components/socket/Canva.js"],"names":["React","useRef","useState","useEffect","tf","cocossd","Webcam","drawRect","Socket","Canva","imgstate","setImgstate","webcamRef","canvasRef","runCoco","net","load","console","log","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","height","obj","ctx","getContext","imgdata","getScreenshot","emit","position","marginLeft","marginRight","left","right","textAlign","zindex"],"mappings":"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","sourcesContent":["// Import dependencies\nimport React, { useRef, useState, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as cocossd from \"@tensorflow-models/coco-ssd\";\nimport Webcam from \"react-webcam\";\nimport \"../App.css\";\nimport { drawRect } from \"../../utilities\";\nimport Socket from \"../../Socket\";\n\n\nexport const Canva = () => {\n    const [imgstate, setImgstate] = useState(\"\")\n    const webcamRef = useRef(null);\n    const canvasRef = useRef(null);\n\n\n\n\n\n    // Main function\n    const runCoco = async () => {\n        const net = await cocossd.load();\n        console.log(\"Handpose model loaded.\");\n\n        //  Loop and detect hands\n        setInterval(() => {\n            detect(net);\n        }, 500);\n    };\n\n    const detect = async (net) => {\n        // Check data is available\n        if (\n            typeof webcamRef.current !== \"undefined\" &&\n            webcamRef.current !== null &&\n            webcamRef.current.video.readyState === 4\n        ) {\n            // Get Video Properties\n            const video = webcamRef.current.video;\n\n            const videoWidth = webcamRef.current.video.videoWidth;\n            const videoHeight = webcamRef.current.video.videoHeight;\n\n            // Set video width\n            webcamRef.current.video.width = videoWidth;\n            webcamRef.current.video.height = videoHeight;\n\n            // Set canvas height and width\n            canvasRef.current.width = videoWidth;\n            canvasRef.current.height = videoHeight;\n\n            // Make Detections\n            const obj = await net.detect(video);\n\n            // Draw mesh\n            const ctx = canvasRef.current.getContext(\"2d\");\n            drawRect(obj, ctx);\n            const imgdata = webcamRef.current.getScreenshot()\n            Socket.emit('stream', imgdata)\n            setImgstate(imgdata)\n\n            console.log(imgstate)\n        }\n    };\n\n    useEffect(() => { runCoco() }, []);\n\n    return (\n        <div className=\"App\">\n            <div><h1>Hola perras</h1></div>\n            <header className=\"App-header\">\n                <Webcam\n\n                    ref={webcamRef}\n                    muted={true}\n                    style={{\n                        position: \"absolute\",\n                        marginLeft: \"auto\",\n                        marginRight: \"auto\",\n                        left: 0,\n                        right: 0,\n                        textAlign: \"center\",\n                        zindex: 9,\n                        width: 640,\n                        height: 480,\n                    }}\n                />\n\n                <canvas\n\n                    ref={canvasRef}\n                    style={{\n                        position: \"absolute\",\n                        marginLeft: \"auto\",\n                        marginRight: \"auto\",\n                        left: 0,\n                        right: 0,\n                        textAlign: \"center\",\n                        zindex: 8,\n                        width: 640,\n                        height: 480,\n                    }}\n                />\n            </header>\n        </div>\n    );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}