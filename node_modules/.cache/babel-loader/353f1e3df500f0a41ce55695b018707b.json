{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Import shared functionality from tfjs-backend-cpu without triggering\n// side effects.\n// tslint:disable-next-line: no-imports-from-dist\nimport * as shared from '@tensorflow/tfjs-backend-cpu/dist/shared';\nvar addImplCPU = shared.addImpl,\n    bincountImplCPU = shared.bincountImpl,\n    bincountReduceImplCPU = shared.bincountReduceImpl,\n    ceilImplCPU = shared.ceilImpl,\n    concatImplCPU = shared.concatImpl,\n    expImplCPU = shared.expImpl,\n    expm1ImplCPU = shared.expm1Impl,\n    floorImplCPU = shared.floorImpl,\n    gatherV2ImplCPU = shared.gatherV2Impl,\n    greaterImplCPU = shared.greaterImpl,\n    lessImplCPU = shared.lessImpl,\n    linSpaceImplCPU = shared.linSpaceImpl,\n    logImplCPU = shared.logImpl,\n    maxImplCPU = shared.maxImpl,\n    maximumImplCPU = shared.maximumImpl,\n    minimumImplCPU = shared.minimumImpl,\n    multiplyImplCPU = shared.multiplyImpl,\n    negImplCPU = shared.negImpl,\n    prodImplCPU = shared.prodImpl,\n    rangeImplCPU = shared.rangeImpl,\n    rsqrtImplCPU = shared.rsqrtImpl,\n    simpleAbsImplCPU = shared.simpleAbsImpl,\n    sliceImplCPU = shared.sliceImpl,\n    stridedSliceImplCPU = shared.stridedSliceImpl,\n    subImplCPU = shared.subImpl,\n    tileImplCPU = shared.tileImpl,\n    topKImplCPU = shared.topKImpl,\n    transposeImplCPU = shared.transposeImpl,\n    uniqueImplCPU = shared.uniqueImpl;\nexport { addImplCPU, bincountImplCPU, bincountReduceImplCPU, ceilImplCPU, concatImplCPU, expImplCPU, expm1ImplCPU, floorImplCPU, gatherV2ImplCPU, greaterImplCPU, lessImplCPU, linSpaceImplCPU, logImplCPU, maxImplCPU, maximumImplCPU, minimumImplCPU, multiplyImplCPU, negImplCPU, prodImplCPU, simpleAbsImplCPU, sliceImplCPU, stridedSliceImplCPU, subImplCPU, rangeImplCPU, rsqrtImplCPU, tileImplCPU, topKImplCPU, transposeImplCPU, uniqueImplCPU };","map":{"version":3,"sources":["../../src/kernel_utils/shared.ts"],"names":[],"mappings":"AACA;;;;;;;;;;;;;;;AAeG;AAEH;AACA;AACA;AACA,OAAO,KAAK,MAAZ,MAAwB,0CAAxB;AAQA,IACW,UADX,GA8BI,MA9BJ,CACE,OADF;AAAA,IAEgB,eAFhB,GA8BI,MA9BJ,CAEE,YAFF;AAAA,IAGsB,qBAHtB,GA8BI,MA9BJ,CAGE,kBAHF;AAAA,IAIY,WAJZ,GA8BI,MA9BJ,CAIE,QAJF;AAAA,IAKc,aALd,GA8BI,MA9BJ,CAKE,UALF;AAAA,IAMW,UANX,GA8BI,MA9BJ,CAME,OANF;AAAA,IAOa,YAPb,GA8BI,MA9BJ,CAOE,SAPF;AAAA,IAQa,YARb,GA8BI,MA9BJ,CAQE,SARF;AAAA,IASgB,eAThB,GA8BI,MA9BJ,CASE,YATF;AAAA,IAUe,cAVf,GA8BI,MA9BJ,CAUE,WAVF;AAAA,IAWY,WAXZ,GA8BI,MA9BJ,CAWE,QAXF;AAAA,IAYgB,eAZhB,GA8BI,MA9BJ,CAYE,YAZF;AAAA,IAaW,UAbX,GA8BI,MA9BJ,CAaE,OAbF;AAAA,IAcW,UAdX,GA8BI,MA9BJ,CAcE,OAdF;AAAA,IAee,cAff,GA8BI,MA9BJ,CAeE,WAfF;AAAA,IAgBe,cAhBf,GA8BI,MA9BJ,CAgBE,WAhBF;AAAA,IAiBgB,eAjBhB,GA8BI,MA9BJ,CAiBE,YAjBF;AAAA,IAkBW,UAlBX,GA8BI,MA9BJ,CAkBE,OAlBF;AAAA,IAmBY,WAnBZ,GA8BI,MA9BJ,CAmBE,QAnBF;AAAA,IAoBa,YApBb,GA8BI,MA9BJ,CAoBE,SApBF;AAAA,IAqBa,YArBb,GA8BI,MA9BJ,CAqBE,SArBF;AAAA,IAsBiB,gBAtBjB,GA8BI,MA9BJ,CAsBE,aAtBF;AAAA,IAuBa,YAvBb,GA8BI,MA9BJ,CAuBE,SAvBF;AAAA,IAwBoB,mBAxBpB,GA8BI,MA9BJ,CAwBE,gBAxBF;AAAA,IAyBW,UAzBX,GA8BI,MA9BJ,CAyBE,OAzBF;AAAA,IA0BY,WA1BZ,GA8BI,MA9BJ,CA0BE,QA1BF;AAAA,IA2BY,WA3BZ,GA8BI,MA9BJ,CA2BE,QA3BF;AAAA,IA4BiB,gBA5BjB,GA8BI,MA9BJ,CA4BE,aA5BF;AAAA,IA6Bc,aA7Bd,GA8BI,MA9BJ,CA6BE,UA7BF;AAgCA,SACE,UADF,EAEE,eAFF,EAGE,qBAHF,EAIE,WAJF,EAKE,aALF,EAME,UANF,EAOE,YAPF,EAQE,YARF,EASE,eATF,EAUE,cAVF,EAWE,WAXF,EAYE,eAZF,EAaE,UAbF,EAcE,UAdF,EAeE,cAfF,EAgBE,cAhBF,EAiBE,eAjBF,EAkBE,UAlBF,EAmBE,WAnBF,EAoBE,gBApBF,EAqBE,YArBF,EAsBE,mBAtBF,EAuBE,UAvBF,EAwBE,YAxBF,EAyBE,YAzBF,EA0BE,WA1BF,EA2BE,WA3BF,EA4BE,gBA5BF,EA6BE,aA7BF","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Import shared functionality from tfjs-backend-cpu without triggering\n// side effects.\n// tslint:disable-next-line: no-imports-from-dist\nimport * as shared from '@tensorflow/tfjs-backend-cpu/dist/shared';\nconst { addImpl: addImplCPU, bincountImpl: bincountImplCPU, bincountReduceImpl: bincountReduceImplCPU, ceilImpl: ceilImplCPU, concatImpl: concatImplCPU, expImpl: expImplCPU, expm1Impl: expm1ImplCPU, floorImpl: floorImplCPU, gatherV2Impl: gatherV2ImplCPU, greaterImpl: greaterImplCPU, lessImpl: lessImplCPU, linSpaceImpl: linSpaceImplCPU, logImpl: logImplCPU, maxImpl: maxImplCPU, maximumImpl: maximumImplCPU, minimumImpl: minimumImplCPU, multiplyImpl: multiplyImplCPU, negImpl: negImplCPU, prodImpl: prodImplCPU, rangeImpl: rangeImplCPU, rsqrtImpl: rsqrtImplCPU, simpleAbsImpl: simpleAbsImplCPU, sliceImpl: sliceImplCPU, stridedSliceImpl: stridedSliceImplCPU, subImpl: subImplCPU, tileImpl: tileImplCPU, topKImpl: topKImplCPU, transposeImpl: transposeImplCPU, uniqueImpl: uniqueImplCPU, } = shared;\nexport { addImplCPU, bincountImplCPU, bincountReduceImplCPU, ceilImplCPU, concatImplCPU, expImplCPU, expm1ImplCPU, floorImplCPU, gatherV2ImplCPU, greaterImplCPU, lessImplCPU, linSpaceImplCPU, logImplCPU, maxImplCPU, maximumImplCPU, minimumImplCPU, multiplyImplCPU, negImplCPU, prodImplCPU, simpleAbsImplCPU, sliceImplCPU, stridedSliceImplCPU, subImplCPU, rangeImplCPU, rsqrtImplCPU, tileImplCPU, topKImplCPU, transposeImplCPU, uniqueImplCPU, };\n//# sourceMappingURL=shared.js.map"]},"metadata":{},"sourceType":"module"}